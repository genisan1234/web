/**
 * @license
 * Copyright (c) 2014, 2020, Oracle and/or its affiliates.
 * The Universal Permissive License (UPL), Version 1.0
 * @ignore
 */
define(["accUtils","knockout","ojs/ojarraydataprovider","ojs/ojvalidation-base","ojs/ojconverterutils-i18n","ojs/ojknockout","ojs/ojtable","ojs/ojvalidation-datetime","ojs/ojvalidation-number","ojs/ojdialog","ojs/ojlabel","ojs/ojinputtext","ojs/ojinputnumber","ojs/ojvalidationgroup","ojs/ojavatar","ojs/ojmessages","ojs/ojformlayout"],(function(e,t,a,o,i){return function(){this.createMessage=e=>({severity:"confirmation",summary:"Updates saved",detail:"The changes for employee "+e.ename+" have been saved.",closeAffordance:"defaults",autoTimeout:-1,sound:"defaults",timestamp:i.IntlConverterUtils.dateToLocalIso(new Date)}),this.positionObject={my:{vertical:"top",horizontal:"start"},at:{vertical:"top",horizontal:"start"},of:"#table"},this.messages=t.observableArray([]),this.messagesDataprovider=t.observable(),this.messagesDataprovider(new a(this.messages)),this.selectedRow=t.observable(),this.activeRow=t.observable(),this.editEmployeeId=t.observable(),this.editEmployeeName=t.observable(),this.editJob=t.observable(),this.editSal=t.observable(),this.editHireDate=t.observable(),this.editMgr=t.observable(),this.editComm=t.observable(),this.editDeptNo=t.observable(),this.groupValid=t.observable(),this.detailEmployeeId=t.observable(),this.detailEmployeeName=t.observable(),this.detailJob=t.observable(),this.detailSal=t.observable(),this.detailHireDate=t.observable(),this.detailMgr=t.observable(),this.detailComm=t.observable(),this.detailDeptNo=t.observable();const s="https://apex.oracle.com/pls/apex/oraclejet/hr/employees/",l=o.Validation.converterFactory("number").createConverter({style:"currency",currency:"USD"}),r=o.Validation.converterFactory("datetime").createConverter({formatStyle:"date",dateFormat:"medium"});this.formatSal=e=>l.format(e),this.formatDate=e=>r.format(e),this.deptMap=t.observable(),$.getJSON("https://apex.oracle.com/pls/apex/oraclejet/hr/departments/").then(e=>{this.deptMap(new Map(Array.from(e.items.map(e=>[e.deptno,e]))))}),this.data=t.observableArray(),this.empMap=t.observable(),$.getJSON(s).then(e=>{this.empMap(new Map(Array.from(e.items.map(e=>[e.empno,e]))));let t=e.items.map(e=>({empno:e.empno,ename:e.ename,job:e.job,hiredate:e.hiredate,sal:e.sal,mgr:e.mgr,comm:e.comm,deptno:e.deptno}));this.data(t)}),this.dataProvider=new a(this.data,{keyAttributes:"empno"}),this.isDisabled=t.observable(!0),this.selectionChangedHandler=e=>{let t=this.selectedRow().data;e.detail.previousValue.key&&document.getElementById(e.detail.previousValue.key+"-btn").setProperty("disabled",!0),document.getElementById(t.empno+"-btn").setProperty("disabled",!1)},this.editRow=e=>{e.detail.originalEvent.stopPropagation();let t=this.selectedRow().data;document.getElementById("editDialog").open(),this.editEmployeeId(t.empno),this.editEmployeeName(t.ename),this.editJob(t.job),this.editSal(t.sal),this.editHireDate(t.hiredate),this.editMgr(t.mgr),this.editComm(t.comm),this.editDeptNo(t.deptno)},this.save=()=>{let e=s+this.editEmployeeId(),t={ename:this.editEmployeeName(),job:this.editJob(),sal:this.editSal(),hiredate:this.editHireDate(),mgr:this.editMgr(),comm:this.editComm(),deptno:this.editDeptNo()};this.updateData(e,t).then(()=>{document.getElementById("editDialog").close();let e=this.createMessage({ename:this.editEmployeeName()});this.messages.push(e);let t=document.getElementById("table").currentRow;null!=t&&(this.data.splice(t.rowIndex,1,{empno:this.editEmployeeId(),ename:this.editEmployeeName(),job:this.editJob(),sal:this.editSal(),hiredate:this.editHireDate()}),document.getElementById(t.rowKey+"-btn").setProperty("disabled",!1))})},this.cancel=()=>{document.getElementById("editDialog").close()},this.updateData=(e,t)=>fetch(e,{method:"PUT",body:JSON.stringify(t),headers:{"Content-Type":"application/json"}}).then(e=>e.json()).catch(e=>console.error(e)),this.rowChangeHandler=e=>{let t=e.detail;if("currentRowChanged"===e.type&&null!=t.value){let e=t.value.rowIndex,a=this.data()[e];null!=a&&(this.detailEmployeeId(a.empno),this.detailEmployeeName(a.ename),this.detailJob(a.job),this.detailSal(l.format(a.sal)),this.detailHireDate(a.hiredate),this.detailMgr(this.getMgr(a.mgr)),this.detailDeptNo(this.getDept(a.deptno))),this.activeRow(t.value)}},this.getDept=e=>e?this.deptMap().get(e).dname:"No Department",this.getMgr=e=>e?this.empMap().get(e).ename:"No Manager",this.connected=()=>{e.announce("Employees content loaded.  As rows in the employees table are selected, more details are presented in the employee detail panel.","assertive"),document.title="Intro - Employees"},this.disconnected=()=>{},this.transitionCompleted=()=>{}}}));